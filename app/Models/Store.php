<?php

namespace App\Models;

use App\Traits\RatingTrait;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Store extends Model
{
    use HasFactory, RatingTrait;

    protected $fillable = [
        'name',
        'image',
        'minimum_cost',
        'recommended',
        'status',
        'description',
        'city' ,
        'street' ,
        'block' ,
        'building' ,
        'floor' ,
        'site_num',
        'owner_id',
        'commercial_record',
    ];

    protected $hidden = [
        'owner_id',
        'commercial_record',
    ];

    protected $appends = ['rating'];
    public function getRatingAttribute(){
        return $this->ratings()->average('rating_value');
    }


    public function categories() {
        return $this->hasMany(Category::class, 'store_id');
    }

    public function offers() {
        return $this->morphMany(Offer::class, 'offerable');
    }

    public function ratings() {
        return $this->morphMany(Rating::class, 'ratingable');
    }

    public static function all($columns = ['*'])
    {
        return parent::all($columns)
            ->sortByDesc('rating')
            ->sortByDesc('recommended');
        // TODO: Change the autogenerated stub
    }

    public function owner() {
        return $this->belongsTo(User::class, 'owner_id');
    }
}
